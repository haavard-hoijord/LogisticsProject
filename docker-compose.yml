services:
  db:
    image: "mysql"
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=password123 --execute \"SHOW DATABASES;\""
      interval: 1s
      timeout: 3s
      retries: 1000
      start_period: 300s
    env_file:
      - .env
    volumes:
      - ./out/sql:/var/lib/mysql
    ports:
      - "3306:3306"

  backend:
    build: "Backend/Webapi"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent http://localhost:80/health || exit 1" ]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 5s
    depends_on:
      redis:
        condition: service_started
      placement:
        condition: service_started
      backend-planner:
        condition: service_healthy
      backend-tracker:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5000:80"

  backend-dapr:
    build: "Backend/Webapi/dapr/"
    depends_on:
      - backend
    network_mode: "service:backend"

  backend-tracker:
    build: "Backend/Tracker"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent http://localhost:80/health || exit 1"]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 5s
    depends_on:
      redis:
        condition: service_started
      placement:
        condition: service_started
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - 5001:80

  backend-tracker-dapr:
    build: "Backend/Tracker/dapr/"
    depends_on:
      - backend-tracker
    network_mode: "service:backend-tracker"

  backend-planner:
    build: "Backend/Planner"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent http://localhost:80/health || exit 1" ]
      interval: 1s
      timeout: 5s
      retries: 20
      start_period: 5s
    env_file:
      - .env
    depends_on:
      redis:
          condition: service_started
      placement:
          condition: service_started
      backend-tracker:
          condition: service_healthy
      rabbitmq:
          condition: service_healthy
    ports:
      - 5002:80

  backend-planner-dapr:
    build: "Backend/Planner/dapr/"
    depends_on:
      - backend-planner
    network_mode: "service:backend-planner"

  frontend-web:
    build: "Frontend/Webview"
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - 3000:3000

  frontend-admin:
    build: "Frontend/Adminview"
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - 3001:3001

  zipkin:
    image: "openzipkin/zipkin"
    ports:
      - "9411:9411"

  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50006"]
    ports:
      - "50006:50006"

  redis:
    image: "redis:alpine"
    ports:
      - "6380:6379"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 20
    environment:
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_USER: admin
    ports:
      - "5672:5672"

  seq:
    image: datalust/seq:latest
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - "./out/seq-data/:/data"